swagger: "2.0"
info:
  version: "0.0.1"
  title: Amal CRM API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /api/v1/
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /auth/token:
    post:
      tags:
        - "user"
      summary: Authorization
      description: Authorization by login and password
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "object"
          properties:
            _login: 
              type: "string"
              example: "user@domain.ru"
            _password:
              type: "string"
              example: 'qwerty'
      responses:
        200:
          description: "Authorization successfull"
          schema:
            $ref: "#/definitions/AuthenticationResponse"    
        400:
          description: "Login or password incorrect"
            
  /auth/activate:
    post:
      tags:
      - "user"
      summary: "Activate user"
      description: "Activate user by invitation hash"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "object"
          properties:
            hash:
              type: string
          example: 
            hash: a4c390ab66e4a0e6337004b97
      responses:
        200:
          description: "Activation successfull"
          schema:
            $ref: "#/definitions/AuthenticationResponse"  
        404: 
          description: "Invitation not found"
        405:
          description: "Invitation expired"
        500:
          description: "Api exception"
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    /user/profile
      get:
        tags:
          - "user"
          - "draft"
        summary: "Returns user profile data"
        responses:
          200:
            description: "Profile data"
            schema:
              $ref: ""

# complex objects have schema definitions
definitions:

  AuthenticationResponse:
    type: "object"
    properties:
      token:
        type: "string"
        example: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXUyJ9"

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
        
  UserProfile:
    type: "object"
    properties:
      firstName: "Sagdiev"
      middleName: "Rustamovich"
      lastName: "Rustam"
